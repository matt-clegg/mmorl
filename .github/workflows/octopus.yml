name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PROJECT_PATH: MMORL
  OCTOPUS_PROJECT_NAME: MMORL.ServerService/MMORL.ServerService.csproj
  OCTOPUS_SPACE_NAME: Default
  OCTOPUS_ENVIRONMENT_NAME: dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set version
        run: echo "PACKAGE_VERSION=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
          
      - name: Make package directories
        run: mkdir -p ./packagesoutput/
          
      - name: Build
        run: dotnet publish $PROJECT_PATH -c Release -r linux-x64 --self-contained false --output ./packagesoutput/$OCTOPUS_PROJECT_NAME
        
      - name: Install Octopus CLI
        run: |
          sudo apt update && sudo apt install --no-install-recommends gnupg curl ca-certificates apt-transport-https && \
          curl -sSfL https://apt.octopus.com/public.key | sudo apt-key add - && \
          sudo sh -c "echo deb https://apt.octopus.com/ stable main > /etc/apt/sources.list.d/octopus.com.list" && \
          sudo apt update && sudo apt install octopuscli
          
      - name: Package and push to Octopus
        run: |
          octo pack --id="$OCTOPUS_PROJECT_NAME" --format="Zip" --version="$PACKAGE_VERSION" --basePath="./packagesoutput/$OCTOPUS_PROJECT_NAME" --outFolder="./packages"
          octo push --package="./packages/$OCTOPUS_PROJECT_NAME.$PACKAGE_VERSION.zip" --server="${{ secrets.OCTOPUS_SERVER }}" --apiKey="${{ secrets.OCTOPUS_APIKEY }}"
          
      - name: Create and deploy release
        run: octo create-release --project="$OCTOPUS_PROJECT_NAME" --packageVersion="$PACKAGE_VERSION" --releaseNumber="$PACKAGE_VERSION" --server="${{ secrets.OCTOPUS_SERVER }}" --apiKey="${{ secrets.OCTOPUS_APIKEY }}" --space="$OCTOPUS_SPACE_NAME" --deployTo="$OCTOPUS_ENVIRONMENT_NAME"
